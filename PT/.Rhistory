url1 <- https://data.gov.ua/dataset/d0f0755f-ce75-4d6b-8310-6e4ddf320c11/resource/0a385ec9-f85e-499c-980e-37accb04d8d5/download/reimbursement_legal_entity_divisions_info.csv
mode = "wb]"
mode = "wb"
url1 <- https://data.gov.ua/dataset/063aaae1-3e0c-48e9-b043-77bbefae9c26/resource/24a190f4-e448-4db5-b2f6-f9c0d8f8d350
url(https://data.gov.ua/dataset/063aaae1-3e0c-48e9-b043-77bbefae9c26/resource/24a190f4-e448-4db5-b2f6-f9c0d8f8d350)
url1 <- "https://data.gov.ua/dataset/063aaae1-3e0c-48e9-b043-77bbefae9c26/resource/24a190f4-e448-4db5-b2f6-f9c0d8f8d350"
file1 <- "reimbursement_legal_entity_divisions_info.csv"
download.file(url1, file1)
data1 <- read.csv(file1, 1)
print('6 first rows of DataSet 1:')
head(data1, n = 6)
url1 <- "https://data.gov.ua/dataset/d0f0755f-ce75-4d6b-8310-6e4ddf320c11/resource/0a385ec9-f85e-499c-980e-37accb04d8d5/download/reimbursement_legal_entity_divisions_info.csv "
file1 <- "reimbursement_legal_entity_divisions_info.csv"
download.file(url1, file1)
url1 <- "https://data.gov.ua/dataset/d0f0755f-ce75-4d6b-8310-6e4ddf320c11/resource/0a385ec9-f85e-499c-980e-37accb04d8d5/download/reimbursement_legal_entity_divisions_info.csv"
file1 <- "reimbursement_legal_entity_divisions_info.csv"
download.file(url1, file1)
data1 <- read.csv(file1, 1)
print('6 first rows of DataSet 1:')
head(data1, n = 6)
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
file2 <- "getdata_data_ss06hid.csv"
download.file(url2,file2)
data2 <- read.csv(file2)
print('3 first rows of DataSet 2:')
head(data2, n=3)
n_val=length(whuch(data2$VAL == 24))
n_val=length(which(data2$VAL == 24))
cat('Number with value $10000000+: ', n_val)
library("XML")
library("XML")
library("XML")
library(XML)
library(RODBC)
library(R0DBC)
library("methods")
data3 <-xmlParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternalNodes=TRUE)
library("XML")
library("JSON")
library("YAML")
library("XLM")
library("xml")
install.packages("XML")
library("XML")
library("methods")
data3 <- xmlParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternalNodes=TRUE)
new_data3<-xpathApply(data3,"/response/row/row")
data3_df<-xmlToDataFrame(new_data3)
n_res = length(which(data3_df$zipcode=="21231"))
print(n_res)
library(rhdf5)
install.packages(rhdf5)
install.packages(hdf5)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rhdf5")
h5createFile("myhd5file.h5")
library(rhdf5)
h5createFile("myhd5file.h5")
h5createGroup("myhdf5file.h5","foo")
h5createFile("myhd5file.h5")
h5createGroup("myhdf5file.h5","foo")
h5createFile("myhdf5file.h5")
h5createGroup("myhdf5file.h5","foo")
h5createGroup("myhdf5file.h5","baa")
h5createGroup("myhdf5file.h5","foo/foobaa")
h5ls("myhdf5file.h5")
A = matrix(1:10,nr=5,nc=2)
h5write(A, "myhdf5file.h5","foo/A")
B = array(seq(0.1,2.0,by=0.1),dim=c(5,2,2))
attr(B, "scale") <- "liter"
h5write(B, "myhdf5file.h5","foo/B")
C = matrix(paste(LETTERS[1:10],LETTERS[11:20], collapse=""),
nr=2,nc=5)
h5write(C, "myhdf5file.h5","foo/foobaa/C")
df = data.frame(1L:5L,seq(0,1,length.out=5),
c("ab","cde","fghi","a","s"), stringsAsFactors=FALSE)
h5write(df, "myhdf5file.h5","df")
h5ls("myhdf5file.h5")
h5f = H5Fopen("myhdf5file.h5")
h5f
sessionInfo()
install.packages("rvest")
library(rvest)
ibm<-
read_html("https://www.imdb.com/search/title/?count=100&release_date=2012,2012&title_type=%20feature")
ibm
films <- ibm %>% html_elements(".lister-item")
films
title <- films %>%html_element(".lister-item-header a")%>%html_text2()
title
rank_film<-films %>% html_element(".text-primary")%>%html_text2()
rank_film
runtime<-films %>% html_element(".text-muted .runtime")%%html_text2()
runtime<-films %>% html_element(".text-muted .runtime")%
runtime<-films %>% html_element(".text-muted .runtime")
%html_text2()
runtime
runtime<-films %>% html_element(".text-muted .runtime")%html_text2()
runtime<-films %>% html_element(".text-muted .runtime")%%html_text2()
movies<=data.frame()
movies<=data.frame(
rank_data = rank_film,
title_data = title,
runtime_data = runtime,
stringsAsFactors = FALSE
)
movies<-data.frame(
rank_data = rank_film,
title_data = title,
runtime_data = runtime,
stringsAsFactors = FALSE
)
movies<-data.frame(
rank_data = rank_film,
title_data = title,
runtime_data = runtime,
stringsAsFactors = FALSE
)
movies<-data.frame(
rank_data = rank_film,
title_data = title,
runtime_data = runtime,
stringsAsFactors = FALSE)
movies<-data.frame(
rank_data = rank_film,
title_data = title,
runtime_data = runtime,
stringsAsFactors = false)
movies<-data.frame(
rank_data = rank_film,
title_data = title,
runtime_data = runtime,
stringsAsFactors = FALSE)
str(movies)
install.packages("tidyverse")
rank_film<-films %>% html_element(".text-primary")%>%html_text2()
rank_film
runtime<-films %>% html_element(".text-muted .runtime")%>%html_text2()
runtime
movies<-data.frame(
rank_data = rank_film,
title_data = title,
runtime_data = runtime,
stringsAsFactors = FALSE)
str(movies)
Head(movies,6)$title_data
head(movies,6)$title_data
subset(movies,runtime_data>120)$title_data
length(which(movies$runtime_data<100))
ibm<-read_html("https://www.imdb.com/search/title/?count=100&release_date=2002,2002&title_type=%20feature")
ibm
films <- ibm %>% html_elements(".lister-item")
films
title <- films %>%html_element(".lister-item-header a")%>%html_text2()
title
rank_film<-films %>% html_element(".text-primary")%>%html_text2()
rank_film
runtime<-films %>% html_element(".text-muted .runtime")%>%html_text2()
runtime
movies<-data.frame(
rank_data = rank_film,
title_data = title,
runtime_data = runtime,
stringsAsFactors = FALSE)
str(movies)
head(movies,6)$title_data
subset(movies,runtime_data>120)$title_data
length(which(movies$runtime_data<100))
xi <- c(1.5, 1.5, 1.53, 1.53, 1.55, 1.55, 1.55, 1.55, 1.59, 1.59, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.62, 1.58, 1.58, 1.60, 1.60, 1.60, 1.60, 1.65, 1.65, 1.65, 1.65, 1.65, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.80, 1.80, 1.80, 1.80, 1.82, 1.82)
rank <- rank(xi)
rank
mean(xi)
median(xi)
var(xi)
sd(xi)
min(xi)
max(xi)
quantile(xi)
IQR(xi)
plot(xi, main = "Main Plot")
hist(xi, main = "Histogram")
h1 <- hist(xi, main = "Histogram & Polygon")
lines(h1$counts ~ h1$mids, col = "red")
boxplot(xi)
xi <- c(1.4, 1.4, 1.4, 1.4, 1.53, 1.53, 1.55, 1.55, 1.55, 1.55, 1.59, 1.59, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.74, 1.58, 1.58, 1.60, 1.60, 1.60, 1.60, 1.59, 1.59, 1.59, 1.59, 1.59, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.80, 1.80, 1.80, 1.80, 1.82, 1.82)
rank <- rank(xi)
rank
mean(xi)
median(xi)
var(xi)
sd(xi)
min(xi)
max(xi)
quantile(xi)
IQR(xi)
mad(xi)
n <- 3
n <- lengrh(xi)
n <- length(xi)
sdd <- sd(xi)
sddef <- sdd/sqrt(n)
sddef
alpha =0.05
degrees.freedom = n - 1
t.score = qt(p=alpha/2, df = degrees.freedom, lower.tail=F)
t.score
margin.error <- t.score * sddef
lower.bound <- mean(xi) - margin.error
upper.bound <- mean(xi) + margin.error
lower.bound
upper.bound
xi <- c(rep(1.55,1), rep(1.58,2), rep(1.6,1), rep(1.63,1), rep(1.65,6))
yi <- c(rep(1.55,5), rep(1.62,6), rep(1.64,3), rep(1.65,1), rep(1.66,1))
t.test(xi,yi,alternative="t")
setwd("C:/Users/USER/Desktop/DataProcessingLabs/PT")
data <- read.csv("best_selling_artists.csv")
head(data)
tail(data)
subset(data, Country == "United States")
subset(data, Country == "United Kingdom")
subset(data, Country == "Barbados")
mean(data$Sales)
mean(data$Year
mean(data$Year)
mean(data$Year)
sd(data$Year)
var(data$Year)
plot.ts(data)
plot(data$Artist, main = "main")
plot(data$Year, main = "main")
hist(data$Year, main = "main")
h1 <- hist(data$Sales, main = "main")
plot(data$Year, main = "Main Plot")
hist(data$Year, main = "Histogram")
h1 <- hist(data$Year, main = "Histogram & Polygon")
lines(h1$counts ~ h1$mids, col = "red")
boxplot(data$Year, main = "Boxplot")
setwd("C:/Users/USER/Desktop/DataProcessingLabs/PT")
data <- read.csv("best_selling_artists.csv")
head(data)
tail(data)
subset(data, Country == "Barbados")
mean(data$Year)
sd(data$Year)
var(data$Year)
plot(data$Year, main = "Main Plot")
hist(data$Year, main = "Histogram")
h1 <- hist(data$Year, main = "Histogram & Polygon")
lines(h1$counts ~ h1$mids, col = "red")
boxplot(data$Year, main = "Boxplot")
